# Telegraf Configuration
#
# Telegraf is entirely plugin driven. All metrics are gathered from the
# declared inputs, and sent to the declared outputs.
#
# Plugins must be declared in here to be active.
# To deactivate a plugin, comment out the name and any variables.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config
# file would generate.
#
# Environment variables can be used anywhere in this config file, simply surround
# them with ${}. For strings the variable must be within quotes (ie, "${STR_VAR}"),
# for numbers and booleans they should be plain (ie, ${INT_VAR}, ${BOOL_VAR})


# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  interval = "10s"
  ## Rounds collection interval to 'interval'
  ## ie, if interval="10s" then always collect on :00, :10, :20, etc.
  round_interval = true

  ## Telegraf will send metrics to outputs in batches of at most
  ## metric_batch_size metrics.
  ## This controls the size of writes that Telegraf sends to output plugins.
  metric_batch_size = 1000

  ## Maximum number of unwritten metrics per output.  Increasing this value
  ## allows for longer periods of output downtime without dropping metrics at the
  ## cost of higher maximum memory usage.
  metric_buffer_limit = 10000

  ## Collection jitter is used to jitter the collection by a random amount.
  ## Each plugin will sleep for a random time within jitter before collecting.
  ## This can be used to avoid many plugins querying things like sysfs at the
  ## same time, which can have a measurable effect on the system.
  collection_jitter = "0s"

  ## Default flushing interval for all outputs. Maximum flush_interval will be
  ## flush_interval + flush_jitter
  flush_interval = "10s"
  ## Jitter the flush interval by a random amount. This is primarily to avoid
  ## large write spikes for users running a large number of telegraf instances.
  ## ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
  flush_jitter = "0s"

  ## By default or when set to "0s", precision will be set to the same
  ## timestamp order as the collection interval, with the maximum being 1s.
  ##   ie, when interval = "10s", precision will be "1s"
  ##       when interval = "250ms", precision will be "1ms"
  ## Precision will NOT be used for service inputs. It is up to each individual
  ## service input to set the timestamp at the appropriate precision.
  ## Valid time units are "ns", "us" (or "Âµs"), "ms", "s".
  precision = ""

  ## Log at debug level.
  # debug = false
  ## Log only error level messages.
  # quiet = false

  ## Log target controls the destination for logs and can be one of "file",
  ## "stderr" or, on Windows, "eventlog".  When set to "file", the output file
  ## is determined by the "logfile" setting.
   logtarget = "stderr"

  ## Name of the file to be logged to when using the "file" logtarget.  If set to
  ## the empty string then logs are written to stderr.
  # logfile = ""

  ## The logfile will be rotated after the time interval specified.  When set
  ## to 0 no time based rotation is performed.  Logs are rotated only when
  ## written to, if there is no log activity rotation may be delayed.
  # logfile_rotation_interval = "0d"

  ## The logfile will be rotated when it becomes larger than the specified
  ## size.  When set to 0 no size based rotation is performed.
  # logfile_rotation_max_size = "0MB"

  ## Maximum number of rotated archives to keep, any older logs are deleted.
  ## If set to -1, no archives are removed.
  # logfile_rotation_max_archives = 5

  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


# Configuration for sending metrics to Prometheus
[[outputs.prometheus_client]]
  listen = ":9191"
  path = "/sonic_prometheus"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################


# SONiC GNMI telemetry input plugin based on GNMI telemetry data produced in SONiC
[[inputs.sonic_telemetry_gnmi]]
 ## Address and port of the GNMI GRPC server
 addresses = ["localhost:8080"]

 ## define credentials - Standard SONiC password
 username = "admin"
 password = "YourPaSsWoRd"

 ## GNMI encoding requested (one of: "proto", "json", "json_ietf")
 encoding = "json_ietf"

 ## redial in case of failures after
 redial = "10s"

 ## enable client-side TLS and define CA to authenticate the device
 enable_tls = true
 # tls_ca = "/etc/telegraf/ca.pem"
 insecure_skip_verify = true

 ## define client-side TLS certificate & key to authenticate to the device
 # tls_cert = "/etc/telegraf/cert.pem"
 # tls_key = "/etc/telegraf/key.pem"

 ## GNMI subscription prefix (optional, can usually be left empty)
 ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
 # origin = ""
 # prefix = ""
 target = "OC-YANG"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "stg_crm"
  origin = ""
  path = "/openconfig-system:system/openconfig-system-crm:crm"
  subscription_mode = "target_defined"
  sample_interval = "300s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "stg_system_eeprom"
  origin = ""
  path = "/openconfig-platform:components/component[name='System Eeprom']"
  subscription_mode = "target_defined"
  sample_interval = "20s"

 ## Define additional aliases to map telemetry encoding paths to simple measurement names
 #[inputs.sonic_telemetry_gnmi.aliases]
 #  ifcounters = "openconfig:/interfaces/interface/state/counters"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  ## Name of the measurement that will be emitted
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet0]/state/counters"
  subscription_mode = "target_defined"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet1]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet2]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet3]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet4]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet5]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet6]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet7]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet8]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet9]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet10]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet11]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet12]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet13]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet14]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet15]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet16]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet17]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet18]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet19]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet20]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet21]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet22]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet23]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet24]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet25]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet26]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet27]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet28]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet29]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet30]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet31]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet32]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet33]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet34]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet35]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet36]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet37]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet38]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet39]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet40]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet41]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet42]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet43]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet44]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet45]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet46]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet47]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet48]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet52]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet56]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet60]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet64]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet68]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet72]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  name = "ifcounters"
  origin = ""
  path = "/openconfig-interfaces:interfaces/interface[name=Ethernet76]/state/counters"
  subscription_mode = "sample"
  sample_interval = "20s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  ## Name of the measurement that will be emitted
  name = "bgp-neighbors"

  ## Origin and path of the subscription
  ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
  ##
  ## origin usually refers to a (YANG) data model implemented by the device
  ## and path to a specific substructe inside it that should be subscribed to (similar to an XPath)
  ## YANG models can be found e.g. here: https://sonic_mgmt_ip_address/ui
  origin = ""
  path = "/openconfig-network-instance:network-instances/network-instance[name=default]/protocols/protocol[identifier=BGP][name=bgp]/bgp/neighbors"
  subscription_mode = "target_defined"
  sample_interval = "60s"


 [[inputs.sonic_telemetry_gnmi.subscription]]
  ## Name of the measurement that will be emitted
  name = "mac-table"

  ## Origin and path of the subscription
  ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
  ##
  ## origin usually refers to a (YANG) data model implemented by the device
  ## and path to a specific substructe inside it that should be subscribed to (similar to an XPath)
  ## YANG models can be found e.g. here: https://sonic_mgmt_ip_address/ui
  origin = ""
  path = "/openconfig-network-instance:network-instances/network-instance[name=default]/fdb/mac-table/entries"

  # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
  subscription_mode = "target_defined"
  sample_interval = "60s"

  ## Suppress redundant transmissions when measured values are unchanged
  # suppress_redundant = false

  ## If suppression is enabled, send updates at least every X seconds anyway
  # heartbeat_interval = "60s"

 [[inputs.sonic_telemetry_gnmi.subscription]]
  ## Name of the measurement that will be emitted
  name = "arp-table"

  ## Origin and path of the subscription
  ## See: https://github.com/openconfig/reference/blob/master/rpc/gnmi/gnmi-specification.md#222-paths
  ##
  ## origin usually refers to a (YANG) data model implemented by the device
  ## and path to a specific substructe inside it that should be subscribed to (similar to an XPath)
  ## YANG models can be found e.g. here: https://sonic_mgmt_ip_address/ui
  origin = ""
  path = "/sonic-neighbor:sonic-neighbor/NEIGH_TABLE/NEIGH_TABLE_LIST/"

  # Subscription mode (one of: "target_defined", "sample", "on_change") and interval
  subscription_mode = "target_defined"
  sample_interval = "60s"

  ## Suppress redundant transmissions when measured values are unchanged
  # suppress_redundant = false

  ## If suppression is enabled, send updates at least every X seconds anyway
  # heartbeat_interval = "60s"
## Define the VRF and Address Families for the BGP Neighbors from FRR on SONiC OS
#   [[inputs.sonic_frr.vrf]]
#     name = "Vrf.blue"
#     ## Address Family one of: "ipv4", "ipv6"
#     address_family = ["ipv4", "ipv6"]
[[inputs.sonic_frr]]
 [[inputs.sonic_frr.vrf]]
   name = "default"
   address_family = ["ipv4"]
